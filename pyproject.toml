[tool.poetry]
name = "optiflux-backend"
version = "0.1.0"
description = "OptiFlux Backend API"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
python-dotenv = "^1.0.0"
pandas = "^2.1.0"
pyyaml = "^6.0.1"
rapidfuzz = "^3.0.0"
pint = "^0.23.0"
pyarrow = "^15.0.0"
langchain = "^0.2.1"
openai = "^1.4.0"
spacy = "^3.7.4"
pypdf = "^4.2.0"
networkx = "^3.2.1"
pgmpy = "^0.1.25"
numpy = "^1.25.2"
scipy = "^1.11.4"
scikit-learn = "^1.3.2"
neo4j = "^5.15.0"
econml = "^0.15.0"
joblib = "^1.3.2"
pyro-ppl = "^1.8.6"
cvxpy = "^1.4.1"
pyDOE2 = "^1.3.0"
langgraph = "^0.2.14"
langchain-openai = "^0.1.8"
langchain-core = "^0.2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "connect"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true